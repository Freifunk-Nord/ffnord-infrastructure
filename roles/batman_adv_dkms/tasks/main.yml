---
- name: Determine wether installed version of batman_adv is suitable
  shell: |
    {% if batman.version_min is defined %}
    min_version="{{ batman.version_min }}"
    {% endif %}
    {% if batman.version_max is defined %}
    max_version="{{ batman.version_max }}"
    {% endif %}
    {% if batman.version is defined %}
    version="{{ batman.version }}"
    {% endif %}

    version_leq() {
      IFS=.
      v1=($1)
      v2=($2)
      unset IFS
      len_v1=${{'{'}}#v1[@]}
      len_v2=${{'{'}}#v2[@]}
      len_min=$len_v1
      if [ $len_v2 -lt $len_min ]; then
        len_min=$len_v2
      fi

      for i in `seq 0 $((len_min - 1))`; do
        if {{ '[ ${v1[$i]} -lt ${v2[$i]} ]' }}; then
          return 0
        fi
        if {{ '[ ${v1[$i]} -gt ${v2[$i]} ]' }}; then
          return 1
        fi
      done

      return 0
    }

    modversion="$(modinfo batman_adv | grep "^version:" | sed "s/[[:space:]]\+/ /g" | cut -f2 -d" ")"
    if [ -n "$min_version" ] && version_leq "$modversion" "$min_version"; then
      echo dkms
      exit 0
    fi

    if [ -n "$max_version" ] && version_leq "$max_version" "$modversion"; then
      echo dkms
      exit 0
    fi

    if [ -z "$min_version" ] && [ -z "$max_version" ]; then
      if version_leq "$version" "$modversion" && version_leq "$modversion" "$version"; then
        echo distro
        exit 0
      fi
      echo dkms
      exit 0
    fi

    echo distro
  args:
    executable: /bin/bash
  register: batman_adv_src
  changed_when: no
  check_mode: no
  when: 'batman is defined'
  tags: batman_adv_dkms

- name: Install batman_adv (dkms)
  include_tasks: dkms.yml
  when: 'batman is defined and "dkms" in batman_adv_src.stdout'
  tags: batman_adv_dkms

- name: Install batman_adv (distro)
  include_tasks: distro.yml
  when: 'batman is not defined or "distro" in batman_adv_src.stdout'
  tags: batman_adv_dkms
